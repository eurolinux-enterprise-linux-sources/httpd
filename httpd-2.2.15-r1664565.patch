diff --git a/modules/mappers/mod_rewrite.c b/modules/mappers/mod_rewrite.c
index 18dda22..6fef78c 100644
diff -uap httpd-2.2.15/modules/mappers/mod_rewrite.c.r1664565 httpd-2.2.15/modules/mappers/mod_rewrite.c
diff -uap httpd-2.2.15/modules/mappers/mod_rewrite.c.r1664565 httpd-2.2.15/modules/mappers/mod_rewrite.c
--- httpd-2.2.15/modules/mappers/mod_rewrite.c.r1664565
+++ httpd-2.2.15/modules/mappers/mod_rewrite.c
@@ -230,6 +230,8 @@ typedef struct {
     char **argv;                   /* argv of the external rewrite map    */
     const char *checkfile2;        /* filename to check for map existence
                                       NULL if only one file               */
+    const char *user;              /* run RewriteMap program as this user */
+    const char *group;             /* run RewriteMap program as this group */
 } rewritemap_entry;
 
 /* special pattern types for RewriteCond */
@@ -1165,6 +1167,7 @@ static void rewrite_child_errfn(apr_pool
 
 static apr_status_t rewritemap_program_child(apr_pool_t *p,
                                              const char *progname, char **argv,
+                                             const char *user, const char *group,
                                              apr_file_t **fpout,
                                              apr_file_t **fpin)
 {
@@ -1177,6 +1180,8 @@ static apr_status_t rewritemap_program_c
                                                   APR_FULL_BLOCK, APR_NO_PIPE))
         && APR_SUCCESS == (rc=apr_procattr_dir_set(procattr,
                                              ap_make_dirstr_parent(p, argv[0])))
+        && (!user || APR_SUCCESS == (rc=apr_procattr_user_set(procattr, user, "")))
+        && (!group || APR_SUCCESS == (rc=apr_procattr_group_set(procattr, group)))
         && APR_SUCCESS == (rc=apr_procattr_cmdtype_set(procattr, APR_PROGRAM))
         && APR_SUCCESS == (rc=apr_procattr_child_errfn_set(procattr,
                                                            rewrite_child_errfn))
@@ -1242,6 +1247,7 @@ static apr_status_t run_rewritemap_progr
         }
 
         rc = rewritemap_program_child(p, map->argv[0], map->argv,
+                                      map->user, map->group,
                                       &fpout, &fpin);
         if (rc != APR_SUCCESS || fpin == NULL || fpout == NULL) {
             ap_log_error(APLOG_MARK, APLOG_ERR, rc, s,
@@ -2866,7 +2872,7 @@ static const char *cmd_rewriteloglevel(c
 #endif /* rewritelog */
 
 static const char *cmd_rewritemap(cmd_parms *cmd, void *dconf, const char *a1,
-                                  const char *a2)
+                                  const char *a2, const char *a3)
 {
     rewrite_server_conf *sconf;
     rewritemap_entry *newmap;
@@ -2875,7 +2881,7 @@ static const char *cmd_rewritemap(cmd_pa
 
     sconf = ap_get_module_config(cmd->server->module_config, &rewrite_module);
 
-    newmap = apr_palloc(cmd->pool, sizeof(rewritemap_entry));
+    newmap = apr_pcalloc(cmd->pool, sizeof(rewritemap_entry));
     newmap->func = NULL;
 
     if (strncasecmp(a2, "txt:", 4) == 0) {
@@ -2960,6 +2966,11 @@ static const char *cmd_rewritemap(cmd_pa
         newmap->checkfile = newmap->argv[0];
         newmap->checkfile2= NULL;
         newmap->cachename = NULL;
+        if (a3) {
+            char *tok_cntx;
+            newmap->user = apr_strtok(apr_pstrdup(cmd->pool, a3), ":", &tok_cntx);
+            newmap->group = apr_strtok(NULL, ":", &tok_cntx);
+        }
     }
     else if (strncasecmp(a2, "int:", 4) == 0) {
         newmap->type      = MAPTYPE_INT;
@@ -4864,8 +4875,8 @@ static const command_rec command_table[]
                      "an input string and a to be applied regexp-pattern"),
     AP_INIT_RAW_ARGS("RewriteRule",     cmd_rewriterule,     NULL, OR_FILEINFO,
                      "an URL-applied regexp-pattern and a substitution URL"),
-    AP_INIT_TAKE2(   "RewriteMap",      cmd_rewritemap,      NULL, RSRC_CONF,
-                     "a mapname and a filename"),
+    AP_INIT_TAKE23(   "RewriteMap",      cmd_rewritemap,      NULL, RSRC_CONF,
+                     "a mapname and a filename and options"),
     AP_INIT_TAKE1(   "RewriteLock",     cmd_rewritelock,     NULL, RSRC_CONF,
                      "the filename of a lockfile used for inter-process "
                      "synchronization"),
